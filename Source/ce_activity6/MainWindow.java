/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ce_activity6;

import evolution.Evolution;
import evolution.Parameters;
import java.awt.BorderLayout;
import java.io.File;
import java.text.DecimalFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author ganearan
 */
public final class MainWindow extends javax.swing.JFrame implements InformationPanel {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        mainPanel.setLayout(new BorderLayout());   
        minFitnessTest = new XYSeries("Min. fitness");
        XYSeriesCollection seriesCollection = new XYSeriesCollection();
        seriesCollection.addSeries(minFitnessTest);
        XYDataset dataset = seriesCollection;
        chartTest = ChartFactory.createXYLineChart(
            "Test results",
            "Execution",
            "",
            dataset,
            PlotOrientation.VERTICAL,
            true,
            false,
            false
        );
        XYPlot plot = (XYPlot) chartTest.getPlot();
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesLinesVisible(0, true);
        renderer.setSeriesShapesVisible(0, false);
        renderer.setSeriesLinesVisible(1, false);
        renderer.setSeriesShapesVisible(1, true);        
        plot.setRenderer(renderer);
        ChartPanel chartPanel = new ChartPanel(chartTest);
        mainPanel.add(chartPanel, BorderLayout.CENTER);
        mainPanel.validate();
        
        mainPanel1.setLayout(new BorderLayout()); 
        minFitnessExecution = new XYSeries("Min. fitness");
        XYSeriesCollection seriesCollection1 = new XYSeriesCollection();
        seriesCollection1.addSeries(minFitnessExecution);
        XYDataset dataset1 = seriesCollection1;
        chartExecution = ChartFactory.createXYLineChart(
            "Current execution",
            "Generation",
            "",
            dataset1,
            PlotOrientation.VERTICAL,
            true,
            false,
            false
        );
        XYPlot plot1 = (XYPlot) chartExecution.getPlot();
        XYLineAndShapeRenderer renderer1 = new XYLineAndShapeRenderer();
        renderer1.setSeriesLinesVisible(0, true);
        renderer1.setSeriesShapesVisible(0, false);
        renderer1.setSeriesLinesVisible(1, false);
        renderer1.setSeriesShapesVisible(1, true);        
        plot1.setRenderer(renderer1);
        ChartPanel chartPanel1 = new ChartPanel(chartExecution);
        mainPanel1.add(chartPanel1 ,BorderLayout.CENTER);
        mainPanel1.validate();
        
        populationFrame = new CE_Activity6_Population();
        populationFrame.setVisible(true);
        enableItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        panelInformation = new javax.swing.JPanel();
        lblExecution = new javax.swing.JLabel();
        txtExecution = new javax.swing.JLabel();
        lblGeneration = new javax.swing.JLabel();
        txtGeneration = new javax.swing.JLabel();
        statusMessageLabel = new javax.swing.JLabel();
        lblMR = new javax.swing.JLabel();
        txtMR = new javax.swing.JLabel();
        panelControl = new javax.swing.JPanel();
        btnStart = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnLoadParameters = new javax.swing.JButton();
        mainPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        lblExecution.setText("Execution:");
        lblExecution.setToolTipText("");

        txtExecution.setText("0");
        txtExecution.setToolTipText("");

        lblGeneration.setText("Generation:");

        txtGeneration.setText("0");

        statusMessageLabel.setText("Message");

        lblMR.setText("MR:");

        txtMR.setText("0");

        javax.swing.GroupLayout panelInformationLayout = new javax.swing.GroupLayout(panelInformation);
        panelInformation.setLayout(panelInformationLayout);
        panelInformationLayout.setHorizontalGroup(
            panelInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblExecution)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtExecution, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblGeneration)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGeneration)
                .addGap(18, 18, 18)
                .addComponent(lblMR)
                .addGap(3, 3, 3)
                .addComponent(txtMR, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(statusMessageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelInformationLayout.setVerticalGroup(
            panelInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelInformationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblExecution)
                    .addComponent(txtExecution)
                    .addComponent(lblGeneration)
                    .addComponent(txtGeneration)
                    .addComponent(statusMessageLabel)
                    .addComponent(lblMR)
                    .addComponent(txtMR))
                .addContainerGap())
        );

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnLoadParameters.setText("Load parameters");
        btnLoadParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadParametersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelControlLayout = new javax.swing.GroupLayout(panelControl);
        panelControl.setLayout(panelControlLayout);
        panelControlLayout.setHorizontalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelControlLayout.createSequentialGroup()
                .addContainerGap(330, Short.MAX_VALUE)
                .addGroup(panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLoadParameters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        panelControlLayout.setVerticalGroup(
            panelControlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelControlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnStart)
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addGap(18, 18, 18)
                .addComponent(btnLoadParameters)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanel1Layout = new javax.swing.GroupLayout(mainPanel1);
        mainPanel1.setLayout(mainPanel1Layout);
        mainPanel1Layout.setHorizontalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 364, Short.MAX_VALUE)
        );
        mainPanel1Layout.setVerticalGroup(
            mainPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mainPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(panelControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelControl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mainPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(panelInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        DataWriter.createFile();
        start();
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        clearItems();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnLoadParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadParametersActionPerformed
        JFileChooser fc = new JFileChooser(".");
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            File file = fc.getSelectedFile();
            Parameters.readParameters(file.getAbsolutePath());
        }
    }//GEN-LAST:event_btnLoadParametersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadParameters;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel lblExecution;
    private javax.swing.JLabel lblGeneration;
    private javax.swing.JLabel lblMR;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel mainPanel1;
    private javax.swing.JPanel panelControl;
    private javax.swing.JPanel panelInformation;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JLabel txtExecution;
    private javax.swing.JLabel txtGeneration;
    private javax.swing.JLabel txtMR;
    // End of variables declaration//GEN-END:variables

    private Evolution evolution;
    private JFreeChart chartTest;
    private XYSeries minFitnessTest;
    private JFreeChart chartExecution;
    private XYSeries minFitnessExecution;
    private CE_Activity6_Population populationFrame;
    
    public void writeInfo(String text) {
        statusMessageLabel.setText(text);
    }

    public void writeError(String text) {
        JOptionPane.showMessageDialog(this, text, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void writeGeneration(int generation) {
        txtGeneration.setText(String.valueOf(generation));
        String FitnessPattern = "0.000";
        txtMR.setText(new DecimalFormat(FitnessPattern).format(Parameters.MutationRate));
    }
    
    public void writeFitnessChange(double value, int generation) {
        minFitnessExecution.add(generation, value);
        txtGeneration.setText(String.valueOf(generation));
    }

    public void writePopulation(String text) {
        populationFrame.writePopulation(text);
    }

    public void enableItems() {
        btnStart.setEnabled(true);
        btnReset.setEnabled(true);
        btnLoadParameters.setEnabled(true);
    }
    
    public void disableItems()
    {
        btnStart.setEnabled(false);
        btnReset.setEnabled(false);
        btnLoadParameters.setEnabled(false);
    }

    public void writeExecutionBestFitness(double value, int execution) {
        minFitnessTest.add(execution, value);
        minFitnessExecution.clear();
        txtExecution.setText(String.valueOf(execution + 1));
    }
    
    private void clearItems() 
    {
        minFitnessTest.clear();
    }
    
    private void start() {
        disableItems();
        // Try to open the file containing the Sudoku puzzle
        JFileChooser fc = new JFileChooser(".");
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) 
        {
            File file = fc.getSelectedFile();
            SudokuReader.readSudoku(file.getAbsolutePath());
            evolution = new Evolution(this);
            evolution.start();
        }
    }
}
